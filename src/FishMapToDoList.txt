Current:
--------
Fix image file names.
Center on selected marker.
Close sidebar after selecting a lake.
Last, and certainly not least, submit it to uDacity.


Bugs:
-----
ifishillinois links need to open a new page so you don't lose your filters...



ToDos:
------
add API calls - wikipedia articles - link from species name in popup window?
	In the infoWindow, make each species name a link to the wikipedia article on that species. Or to a corresponding page at iFishIllinois.
Learn more about Bower - how to keep components up to date
Learn more about Bower - how to use src/dev/dist
search function - real time, by name
Add sort criteria to species dropdown (alpha, frequency, threshold)
add API calls - fishing reports
http://www.prairiestateoutdoors.com/
http://www.prairiestateoutdoors.com/pso/article/central_illinois_lake_status_reports
local storage
	http://stackoverflow.com/questions/11601365/how-can-i-implement-mvvm-with-offline-storage-and-knockout-js
	https://github.com/jimrhoskins/knockout.localStorage
add rivers "area"
Add a "Center map at my current location" button if the user's current location is known.
Add "Settings" with a way to get back to the splash page.


Finished:
---------
LakeScraper proof of concept
basic html page
incorporate Bower
integrate knockout
hook up lake list
set up git repo and get the POC committed
add county info
Store info locally
Set up the map
Add pins to the map
change pin to a fish symbol
integrate bootstrap
Area filters. Got 'em checking and unchecking in the dropdown.
Got the lakes list to repopulate.
Got the markers to repopulate.
fixed - markers don't populate on startup
filter function - area - nw, ne, ec, wc, s
filter function - pick one or more species
filter function - other criteria?
add API calls - pics, pintrest, flickr, picasa, panoramia, instagram
Does the trib have an API?
Maybe the Herald?
style up the page
make it responsive
test it in a phone browser
Separate the filters model from the filtersVM...
then get the filters model from the viewModel for use in the LakeListVM...
And again in the FiltersVM...
attributions:
	"This product uses the Flickr API but is not endorsed or certified by Flickr."
splash page
change style of markers based on data...
identify selected marker on map by changing it (color, size, etc)
in the lake list, turn grey - no species, or no latlon
	(marked it with the zero instead)
marker - if no species, turn marker grey
	(used a different icon with a question mark instead)
search box - keyboard shortcuts, autocomplete, search multiple fields
fixed:Flickr photos show up one click behind the infowindow...
Decided to handle this differently: add "Unknown" species to lakes with no species
Error handling: Check blocked API --and-- jquery ajax .fail
finish the code cleanup - decouple the various viewmodels.
Aren't they supposed to be called ViewModels?
code formatting
comments
add lat/lon (to lakes with no species) - everything except the rivers.
gulp - build script
search bar is not working on species names...
README file - how to run it, references, purpose, etc.
Check it all in, push it to github.
Problem: the Bower components are NOT migrated into the build folder during the gulp build. The app's not going to work when the build is copied to a new location.
Fix: use a CDN (cdnjs.com)
Migrate the "build" code over to my github.io site.


Development log:
----------------
Set up initial project directories
Initial Bower configuration
Need to learn a bit more about how Bower works. Not completely clear, yet.
LakeScraper POC
Grabbing lake names, individual pages, and species lists.
Unfortunately, can't get a good address, or lat/lon to pinpoint them on the map.
Also, unfortunately, not all lakes listed have species lists.
Found another list at: http://itouchmap.com/?f=lake&s=IL which lists 860 lakes in Il. But doesn't give fishing info...
Fought with ko.computed() for a while... It's touchy... If you update your observableArray without using a ko function (IE: myOA()[myOA().length] = blah) then you won't get the dependencies to trigger. But if you use the ko ".push" instead, it works (IE: myOA.push(blah)).
rewrote it to load from a locally sourced JSON object rather than the scraper. This will make it possible to splice in latlon values, and pin the lakes up on the map.
Notes on map markers:
	Maybe I need a lakes list, and a visible lakes list...
	Or... can I filter them as they're added to the menu and the markers?
	Or... Could I set them as hidden in the list? and removed from the map?
	This last idea might just be the best... If it works.
	Currently, viewModel.lakes is observable directly by the binding in the html.
	Is there a way to compute the observable? Or something like that?
	keep it simple: use two arrays, one of all the lakes, the other of the visible lakes based on the filters. When the filters change, use removeAll, and then push the visible ones back into the array. ANd look at setting the rateLimit on the observableArray so it doesn't repaint on every push.
Log died when the todo/finished lists got rolling...
