var PanoramioVM = function() {	var self = this;	this.lat = ko.observable("42.105287");	this.lon = ko.observable("-87.939661");	this.setLocation = function(aLat, aLon) {		//Ideally, should validate that each input is a string representation of a number where		// (-90 <= lat <= 90) and (-180 <= lon <= 180).		if (-90 <= aLat && aLat <= 90 && -180 <= aLon && aLon <= 180) {			self.lat(aLat);			self.lon(aLon);			self.panoramioThumbs();		}	};	this.pWidget;	this.numPanoramioThumbs = ko.observable(0);	this.panoramioThumbs = function() {		var pRequest = { 'rect':			{'sw': {'lat': self.lat() - 0.01, 'lng': self.lon() - 0.01},				'ne': {'lat': self.lat() - 0 + 0.01, 'lng': self.lon() - 0 + 0.01}}};console.log("ploc:"+self.lat()+","+self.lon());		var pOptions = { 'width': 450, 'height': 100, 'columns': 10, 'rows': 1, 'croppedPhotos': true, 'orientation': panoramio.PhotoListWidgetOptions.Orientation.HORIZONTAL };		self.pWidget = new panoramio.PhotoListWidget('panoramioPics', pRequest, pOptions);		panoramio.events.listen(self.pWidget, panoramio.events.EventType.PHOTO_CHANGED, function(event) {			var photos = self.pWidget.getPhotos();			var counter = 0;			for (var i = 0; i < photos.length; i++) {				if (null != photos[i]) {					counter++;				};			};			self.numPanoramioThumbs(counter);			self.panoramioAttrib();		});		self.pWidget.setPosition(0);	};	this.panoramioAttrib = ko.computed(function() {//console.log("panoramioAttrib");		if (0 < self.numPanoramioThumbs()) {//console.log("pics");			return "pics";		}		else		{//console.log("None nearby");			return "No nearby Panoramio pics available"		}	});};