var LakeListVM = function(inFilters) {	var self = this;	this.filters = inFilters;	this.setCurrentLake = function(theLake) {		viewModel.setCurrentLake(theLake);	};	this.matchSearchBoxToLakeName = function(aLake) {		return (-1 != aLake.name().toUpperCase().search(""+self.filters.searchStr().toUpperCase()));	};		this.matchSearchBoxToSpeciesNames = function(aLake) {		var species = aLake.species();console.log("matching:"+aLake.name());console.log("species:");console.log(species);console.log("searchfor: " + self.filters.searchStr());		if (0 < species.length && 0 < self.filters.searchStr().length) {			for (var i = 0; i < species.length; i++) {				var sp = species[i];				if (-1 != sp.toUpperCase().search(""+self.filters.searchStr().toUpperCase())) {					return true;				}			}		};		return false;	};		this.filteredLakes = ko.computed(function() {		var filtered = [];		viewModel.lakes().forEach(function(aLake) {			if ("" != aLake.area()) {				if (self.filters.areaFilters()[aLake.area()]()) {					if (self.hasChosenSpecies(aLake)) {						if (self.matchSearchBoxToLakeName(aLake)) {// console.log("matched chosen species and search box");							filtered[filtered.length] = aLake;						}					}					else if (self.matchSearchBoxToSpeciesNames(aLake)) {// console.log("matched search box to species name");						filtered[filtered.length] = aLake;					}					else if (self.noSpecies(aLake)) {// console.log("matched no species");						filtered[filtered.length] = aLake;					};				};			};		});		return filtered;	});	this.hasChosenSpecies = function(theLake) {		if (0 < theLake.species().length) {			for (var i = 0; i < self.filters.speciesFilters().length; i++) {				var sFilter = self.filters.speciesFilters()[i];			//self.speciesFilters().some(function(sFilter) {//console.log("checking: " + sFilter().name() + " against " + theLake.name());				if (sFilter().value()) {					if (-1 != $.inArray(sFilter().name(), theLake.species())) {//console.log("  found!");						return true;					};				};				//return false;			};		};		return false;	};	this.noSpecies = function(theLake) {		if (0 < theLake.species().length) { return false; };		if (typeof theLake.latlon() === 'undefined') { return false; };		if (theLake.latlon().length === 0) { return false; };		if (theLake.lat() < -90 || 90 < theLake.lat() ||			theLake.lon() < -180 || 180 < theLake.lon()) { return false; };		if (self.filters.unknownSpecies()) {			return true; }		else {			return false;		};	};	this.loadLakeData = function() {		var theLakes = [];		LakeData.forEach(function(aLake) {			var info = new LakeInfo(aLake.name, aLake.href);			info.county(aLake.county);			info.latlon(aLake.latlon);			info.area(aLake.area);			aLake.species.forEach(function(aSpecies) {				info.species.push(aSpecies);				//If not there already, add species to speciesFilters...				self.filters.addSpeciesFilter(aSpecies);			});			viewModel.buildMapMarker(info);			theLakes.push(info);		});		viewModel.lakes(theLakes);		self.filters.setInitialSpeciesFilterThreshold(10);	};};